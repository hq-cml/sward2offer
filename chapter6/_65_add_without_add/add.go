/*
// 面试题65：不用加减乘除做加法
// 题目：写一个函数，求两个整数之和，要求在函数体内不得使用＋、－、×、÷
// 四则运算符号。

这也是一道非常牛逼的题目，四则运算不让用，只能用位运算。
1. 按位异或，能够得到不进位结果 x
2. 按位与操作然后左移1位，得到进位的结果 y
3. 将x 和 y利用上述1和2继续进行操作，直到y==0为止，得到最终的x就是结果
 */
package _65_add_without_add

//不用加减乘除，做加法
//思路很巧妙：
//1. 先不考虑进位的问题，则每一位出现1的可能只会是不相同的情况，可以异或操作
//2. 考虑进位的问题，则每一位出现进位只可能是同时为1，此时与操作，并左移1位
//3. 往复迭代，直到两个数不存在进位的情况了
func Add(i, j int) int {
    for {
        //先不考虑进位
        tmp1 := i ^ j

        //考虑进位
        tmp2 := (i & j) << 1

        if tmp2 == 0 {
            return tmp1
        }
        i = tmp1
        j = tmp2
    }
}